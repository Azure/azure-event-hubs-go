variables:
  GOPATH: '$(system.defaultWorkingDirectory)/work'
  sdkPath: '$(GOPATH)/src/github.com/$(build.repository.name)'
  GO111MODULE: 'on'

pr: none

pool:
  vmImage: 'ubuntu-18.04'

steps:
  - task: GoTool@0
    inputs:
      version: '1.14'
    displayName: "Select Go Version"

  - script: |
      set -e
      mkdir -p '$(GOPATH)/bin'
      mkdir -p '$(sdkPath)'
      shopt -s extglob
      mv !(work) '$(sdkPath)'
      echo '##vso[task.prependpath]$(GOPATH)/bin'
      go version
    displayName: 'Create Go Workspace'
  - script: |
      set -e
      go get github.com/mattn/goveralls
      go get golang.org/x/tools/cmd/cover
      go get github.com/fzipp/gocyclo
      go get golang.org/x/lint/golint
    displayName: 'Install Dependencies'
  - script: |
      set -e
      curl -sLo /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.12.8/terraform_0.12.8_linux_amd64.zip
      unzip /tmp/terraform.zip -d /tmp
      mkdir -p ~/bin
      export PATH="~/bin:$PATH"
      export GO111MODULE=on
      cd '$(sdkPath)'
      make test-cover
      goveralls -coverprofile=cover.out -service=azure-devops
      make destroy
    displayName: 'Run Integration Tests'
    env:
      ARM_SUBSCRIPTION_ID: $(go-live-azure-subscription-id)
      ARM_CLIENT_ID: $(go-live-eh-azure-client-id)
      ARM_CLIENT_SECRET: $(go-live-eh-azure-client-secret)
      ARM_TENANT_ID: $(go-live-tenant-id)

  - task: PublishTestResults@2
    inputs:
      testRunner: JUnit
      testResultsFiles: $(sdkPath)/report.xml
      failTaskOnFailedTests: true
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura 
      summaryFileLocation: $(sdkPath)/coverage.xml
      additionalCodeCoverageFiles: $(sdkPath)/coverage.html
